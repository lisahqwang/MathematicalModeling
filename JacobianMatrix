syms r cbar b;  
eig([-r/(cbar*b), -r + (r/(cbar *b))  ; cbar*r - (r/b), 0])
det([-r/(cbar*b), -r + (r/(cbar *b))  ; cbar*r - (r/b), 0])
trace([-r/(cbar*b), -r + (r/(cbar *b))  ; cbar*r - (r/b), 0])

%% solve jacobian matrix first

syms J r b C TH cbar k
jacobian([((r*J) - (b*J*C)/((b*TH*J) + 1)), ((b*cbar*J*C)/((b*TH*J) + 1) -(k*C))],[J,C])


% J = ((k)/((b*cbar)- (k*b*TH)))
% C = ((r*TH*k + r*cbar -k*TH)/((b*cbar) - (k*b*TH)))

eig([r - ((((r*TH*k + r*cbar -k*TH)/((b*cbar) - (k*b*TH)))*b)  ...
    / ((((k)/((b*cbar)- (k*b*TH)))*TH*b)  + 1))     +    ...
    (( ((k)/((b*cbar)- (k*b*TH))) * ((r*TH*k + r*cbar -k*TH)/((b*cbar) ...
    - (k*b*TH)))* TH* b*b)     /  ((((k)/((b*cbar)- (k*b*TH)))*TH*b + 1)^2) ) , ...
    (-((k)/((b*cbar)- (k*b*TH))) *b) / ((((k)/((b*cbar)- (k*b*TH)))*TH*b) + 1); ...
    (((r*TH*k + r*cbar -k*TH)/((b*cbar) - (k*b*TH))) * b *cbar ) / ...
    (((k)/((b*cbar)- (k*b*TH))) * TH * b + 1) - (((r*TH*k + r*cbar -k*TH)/((b*cbar) ...
    - (k*b*TH)))* ((k)/((b*cbar)- (k*b*TH))) *TH*b^2 * cbar )/ ...
    (((k)/((b*cbar)- (k*b*TH))) *TH * b +1)^2 , (((k)/((b*cbar)- ...
    (k*b*TH)))*b*cbar)/(((k)/((b*cbar)- (k*b*TH)))*TH*b + 1) - k])
    
    
    

trace([r - ((((r*TH*k + r*cbar -k*TH)/((b*cbar) - (k*b*TH)))*b)  ...
    / ((((k)/((b*cbar)- (k*b*TH)))*TH*b)  + 1))     +    ...
    (( ((k)/((b*cbar)- (k*b*TH))) * ((r*TH*k + r*cbar -k*TH)/((b*cbar) ...
    - (k*b*TH)))* TH* b*b)     /  ((((k)/((b*cbar)- (k*b*TH)))*TH*b + 1)^2) ) , ...
    (-((k)/((b*cbar)- (k*b*TH))) *b) / ((((k)/((b*cbar)- (k*b*TH)))*TH*b) + 1); ...
    (((r*TH*k + r*cbar -k*TH)/((b*cbar) - (k*b*TH))) * b *cbar ) / ...
    (((k)/((b*cbar)- (k*b*TH))) * TH * b + 1) - (((r*TH*k + r*cbar -k*TH)/((b*cbar) ...
    - (k*b*TH)))* ((k)/((b*cbar)- (k*b*TH))) *TH*b^2 * cbar )/ ...
    (((k)/((b*cbar)- (k*b*TH))) *TH * b +1)^2 , (((k)/((b*cbar)- ...
    (k*b*TH)))*b*cbar)/(((k)/((b*cbar)- (k*b*TH)))*TH*b + 1) - k])
